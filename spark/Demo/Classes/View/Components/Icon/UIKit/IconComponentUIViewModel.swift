//
//  IconComponentUIViewModel.swift
//  Spark
//
//  Created by alican.aycil on 28.08.23.
//  Copyright (c) 2023 Adevinta. All rights reserved.
//
//  This file was generated by http://www.popcornomnom.com
//

import Combine
@_spi(SI_SPI) import SparkCommon
import Spark
import UIKit

final class IconComponentUIViewModel: ObservableObject {

    // MARK: - Published Properties
    var showThemeSheet: AnyPublisher<[ThemeCellModel], Never> {
        showThemeSheetSubject
            .eraseToAnyPublisher()
    }

    var showIntentSheet: AnyPublisher<[IconIntent], Never> {
        showIntentSheetSubject
            .eraseToAnyPublisher()
    }

    var showSizeSheet: AnyPublisher<[IconSize], Never> {
        showSizeSheetSubject
            .eraseToAnyPublisher()
    }

    let themes = ThemeCellModel.themes

    // MARK: - Private Properties
    private var showThemeSheetSubject: PassthroughSubject<[ThemeCellModel], Never> = .init()
    private var showIntentSheetSubject: PassthroughSubject<[IconIntent], Never> = .init()
    private var showSizeSheetSubject: PassthroughSubject<[IconSize], Never> = .init()

    // MARK: - Initialization
    @Published var theme: Theme
    @Published var intent: IconIntent
    @Published var size: IconSize
    let iconImage: UIImage

    init(
        iconImage: UIImage = UIImage(systemName: "lock.circle") ?? UIImage(),
        theme: Theme,
        intent: IconIntent = .main,
        size: IconSize = .medium
    ) {
        self.iconImage = iconImage
        self.theme = theme
        self.intent = intent
        self.size = size
    }
}

// MARK: - Navigation
extension IconComponentUIViewModel {

    @objc func presentThemeSheet() {
        self.showThemeSheetSubject.send(themes)
    }

    @objc func presentIntentSheet() {
        self.showIntentSheetSubject.send(IconIntent.allCases)
    }

    @objc func presentSizeSheet() {
        self.showSizeSheetSubject.send(IconSize.allCases)
    }
}
